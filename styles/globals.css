/* Global styles for Fat Slob Plumbing */
/* The idea here is to set cascading globals,
/* then make exceptions lower in the hierarchy as required
/* or in the jsx
*/

/* import breakpoints from breakpoints.ts */
:import('./breakpoints.ts'){
  --mobile: size.mobile;
  --desktop: size.desktop;
  --xl: size.xl;
}


:root {
  /* Colour Palette */
  --clr-text-primary: hsl(0,100%,50%);
  --clr-text-secondary: hsl(249, 100%, 20%);
  --clr-text-light: hsl(0,0%, 99%);
  
  --clr-bg-primary: hsl(249, 100%, 20%);
  --clr-bg-secondary: hsl(0,100%,50%);
  --clr-bg-light: hsl(0,0%,99%);
  
  --clr-btn-hover: whitesmoke;
  --shadow: hsla(236, 95%, 60%, 0.75);

  /* Font Family */
  --ff-primary: 'Inter', Tahoma, Verdana, sans-serif;
  /* Base Font Size */
  --fs-base: 16px;

  --boxShadow: 1px 1px 12px 1px var(--shadow);
  --borderRadius: 4px;
}

@supports (font-variation-settings: normal) {
  :root {
    font-family: var(--ff-primary);
  }
}

/****** RESET *****/

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/***** DEFAULT STYLES *****/

html {
  scroll-behavior: smooth;
  user-select: none;
  height: 100%;
}

body {
  background-color: var(--clr-bg-primary);
  font-family: var(--ff-primary);
  text-rendering: optimizeSpeed;
  width:100%;
}

 h1 {
  display: inline-block;
  font-size: clamp(2rem, 10vw, 80px);
  font-family: var(--ff-primary);
  font-weight: 900;
  letter-spacing: -0.1rem;
  margin: 0px;
  text-align: left;
}

/* Set defaults for html <section> tags */
section[class$='Section'] {
  color: var(--clr-text-primary);
  display: flex;
  flex-direction: column;
  place-items: center;
}

/* Override h1 for Hero section */
section[class$='Section'] h1:not(.heroSection h1) {
  margin-bottom: 2rem;
  text-align: center;
}

button {
  background-color: var(--clr-bg-light);
  border: none;
  border-radius: var(--borderRadius);
  box-shadow: var(--boxShadow);
  color: var(--clr-text-secondary);
  font-size: var(--fs-base);
  font-weight: 900;
  width: min(45vw, 240px);
  aspect-ratio: 3/1;
}

button:hover,
:focus {
  cursor: pointer;
  background-color: var(--clr-btn-hover);
}

@media screen and (min-width: var(--mobile)) {
  div ~ p {
    font-size: 1.5rem;
    display: flex;
    flex-direction: row;
    justify-content: left;
    max-width: clamp(70%, 80vw, 90%);
  }
  section[class$='Section'] .heroButtons {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    width: min(90vw, 800px);
  }
  h1 {
    letter-spacing: -0.2rem;
  }
}

.animated {
  -webkit-animation-duration: 0.25s;
  animation-duration: 0.25s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-iteration-count: 1;
  animation-iteration-count: 1;
  animation-delay: 0s;
}

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
}

@keyframes fadeInDown {
    0% {
        opacity: 1;
        transform: translateY(4px);
    } 
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}